namespace PacketGenerator.CodeGen;

public class PacketCode
{
	private string PacketSourceBegin => $@"// generated by RAMG Packet Generator
using MemoryPack;
using Network.NetCommand;

namespace RAMG.Packets
{{
	[MemoryPackable]
	public partial class {_packetType.FullName} : PooledNetCommand<{_packetType.FullName}>
	{{
";

	private string PacketSourceEnd => $@"
		public static {_packetType.FullName} Create()
		{{
			return GetOrCreate();
		}}

		public override short Opcode => (short) RAMG.Packets.Opcode.{_packetType.FullName};
	}}
}}";

	private PacketType _packetType;

	public PacketCode(PacketType packetType)
	{
		_packetType = packetType;
	}

	public string FileName => $"{_packetType.FullName}.generated.cs";

	public string ToSource()
	{
		var result = PacketSourceBegin;
		var variables = _packetType.Variables;

		for (int i = 0; i < variables.Length; i++)
		{
			var variable = variables[i];

			result += '\t';
			result += '\t';
			result += $"public {variable.Type} {variable.Name} {{ get; set; }}";

			if (i < variables.Length - 1)
			{
				result += "\n";
			}
		}

		result += PacketSourceEnd;

		return result;
	}
}
